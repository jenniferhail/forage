{% comment %}
  This snippet controls the collage product grid.  Depending on the number of products in
  a collection we want to display them in rows of 1, 2, 3, or a reversed row of 3.

  A '3 row' has the large product left align with two smaller product on the right.

  The 'reversed 3 row' has the large product right aligned with two smaller products on
  the left.

  If we're near the end of the loop and there are not enough products to make
  complete rows of 3, we switch to a 2 item row.

  Depending on where we are in the group of three products and if it's reversed,
  we want to set the grid_item_width for each item in the collection.

  The collage grid is only used for the desktop breakpoint.

  For example:
  1  = 1
  2  = 2
  3  = 3
  4  = 2 + 2
  5  = 3 + 2
  6  = 3 + reverse 3
  7  = 3 + 2 + 2
  8  = 3 + reverse 3 + 2
  9  = 3 + reverse 3 + 3
  10 = 3 + reverse 3 + 2 + 2
  11 = 3 + reverse 3 + 3 + 2
  etc.

  Change the grid item width by using classes from the grid in
  the grid_item_width variable.

  Example:
    - {% assign grid_item_width = 'large--one-third medium--one-half' %}
{% endcomment %}

{% assign collection_index__product = forloop.index %}
{% assign max = section.settings.product_count %}
{% assign remaining_length__product = collection_product_count__product | minus: collection_index__product %}
{% assign product_count = forloop.length %}

{% comment %}
  If there are more than three items left we want to put them in a 3
  or reverse 3 row

  3 row = 1 large product on the left, 2 small on the right
  reverse 3 row = 2 small products on the left, 1 large on the right
{% endcomment %}
{% if product_count > 1 %}
  <div class="grid__item collage-grid__row">
    <div class="grid">
       {% include 'product-grid-events' %}
    </div>
  </div>
{% else %}
  {% include 'product-grid-events' %}
{% endif %}

